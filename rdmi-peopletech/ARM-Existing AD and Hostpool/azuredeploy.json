{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "rdshUpdateIteration": {
            "type": "string",
            "defaultValue": 1,
            "metadata": {
                "description": "A unique designator representing update iteration; newly created RDSH instances will have their names in the form: 'rdsh-&lt;index&gt;&lt;iteration&gt;"
            }
        },
        "rdshNumberOfInstances": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of RD Session Hosts"
            }
        },
        "rdshVmSize": {
            "type": "string",
            "allowedValues": [
              "Standard_A0",
              "Standard_A1",
              "Standard_A2",
              "Standard_A3",
              "Standard_A4",
              "Standard_A5",
              "Standard_A6",
              "Standard_A7",
              "Standard_D1",
              "Standard_D2",
              "Standard_D3",
              "Standard_D4",
              "Standard_D5"
            ],
            "metadata": {
              "description": "The size of the RDSH VMs"
            },
            "defaultValue": "Standard_A2"
        },
        "existingDomainName": {
            "type": "string",
            "metadata": {
                "description": "Domain name of the exisiting RDS deployment"
            }
        },
        "existingAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of administrator in the existing RDS deployment"
            }
        },
        "existingAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Domain administrator password"
            }
        },
        "existingVnetName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
                "description": "VNET name"
            }
        },
        "existingSubnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
                "description": "Subnet name"
            }
        },
        "availabilitySet": {
            "type": "string",
            "defaultValue": "rdsh-availabilityset",
            "metadata": {
                "description": "Availability set for new RDSH instances"
            }
        },
        "imageSKU": {
            "type": "string",
            "allowedValues": [
              "2012-R2-Datacenter",
              "2016-Datacenter"
            ],
            "metadata": {
              "description": "Windows server SKU"
            },
            "defaultValue": "2016-Datacenter"
          },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            
            "defaultValue": "https://raw.githubusercontent.com/PeopleTechRDS/msft-rdmi-templates/master/ARM-Existing%20AD%20and%20Hostpool/"
            
            
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }

    },

    "variables": {
        "iteration": "[toLower(parameters('rdshUpdateIteration'))]",
        "storageAccountName": "[tolower(concat('rdsa', uniqueString(resourceGroup().id)))]",
        "uniqueStorageAccountContainerName": "[toLower(concat('sac', resourceGroup().name))]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "p": {
            "domain": "[concat(' -domain ', parameters('existingDomainName'))]",
            "user": "[concat(' -username ', parameters('existingAdminUsername'))]",
            "pwd": "[concat(' -password ', parameters('existingAdminPassword'))]",
            "iteration": "[concat(' -iteration ', toLower(parameters('rdshUpdateIteration')))]",
            "servers": "[concat(' -nServers ', parameters('rdshNumberOfInstances'))]"
            
        },
        "scriptParameters": "[concat(variables('p').domain, variables('p').user, variables('p').pwd, variables('p').iteration, variables('p').servers)]"        
    },

    "resources": [
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('rdsh-', copyindex(),variables('iteration'), '-nic')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdsh-nic-loop",
                "count": "[parameters('rdshNumberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySet')]",
            "location": "[resourceGroup().location]"
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('rdsh-', copyindex(),variables('iteration'))]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "rdsh-vm-loop",
                "count": "[parameters('rdshNumberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', 'rdsh-', copyindex(),variables('iteration'), '-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('rdshVmSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                },
                "osProfile": {
                    "computerName": "[concat('rdsh-', copyindex(),variables('iteration'))]",
                    "adminUsername": "[parameters('existingAdminUsername')]",
                    "adminPassword": "[parameters('existingAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                      "publisher": "[variables('imagePublisher')]",
                      "offer": "[variables('imageOffer')]",
                      "sku": "[parameters('imageSKU')]",
                      "version": "latest"
                    },
                      
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                          "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2016-01-01').primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/','rdsh-',copyindex(),'-os-disk.vhd')]"
            
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                      }
                    },    
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat('rdsh-', copyindex(),variables('iteration'), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob]"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "2015-06-15",
                    "type": "extensions",
                    "name": "[concat('rdsh-',copyindex(),variables('iteration'))]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat('rdsh-', copyindex(),variables('iteration')))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.11",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip', parameters('_artifactsLocationSasToken'))]",
                            "ConfigurationFunction": "Configuration.ps1\\SessionHost",
                            "Properties": {
                                "DomainName": "[parameters('existingDomainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('existingAdminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('existingAdminPassword')]"
                            }
                        }
                    }
                }
            ]
        }
    ]
}
